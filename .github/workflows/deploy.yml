name: Deploy to Railway at 21 

on:
  schedule:
    - cron: '0 21 * * *'  # 20:00 UTC (22:00 ora italiana)
  workflow_dispatch:       # Permette trigger manuale

jobs:
  deploy:
    runs-on: ubuntu-latest
    container: ubuntu:latest
    env:
      SVC_ID: bot_telegram
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y curl jq

      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh

      - name: Deploy to Railway
        run: |
          railway up --service=${{ env.SVC_ID }}

      - name: Get Deployment ID
        run: |
          # Ottieni l'ID del deployment usando l'API di Railway
          DEPLOYMENT_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $RAILWAY_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"query": "{ deployments(projectId: \"TUO_PROJECT_ID\") { edges { node { id createdAt } } } }"}' \
            https://backboard.railway.app/graphql/v2)

          # Estrai l'ID del deployment piÃ¹ recente
          DEPLOYMENT_ID=$(echo "$DEPLOYMENT_RESPONSE" | jq -r '.data.deployments.edges[0].node.id')
          echo "Deployment ID: $DEPLOYMENT_ID"

          # Salva ID e timestamp in un file
          echo '{"id": "'$DEPLOYMENT_ID'", "timestamp": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'"}' >> deployments.json

          # Commit e push del file
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add deployments.json
          git commit -m "Aggiungi deployment $DEPLOYMENT_ID"
          git push
